'use strict';

// –ù–∞—á–∞–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
let currentPlayer = 'X';
let gameBoard = ['', '', '', '', '', '', '', '', ''];
let gameActive = true;

const message = document.getElementById('gameMessage');
message.classList.remove('message-appear');

// –°–º–µ–Ω–∞ –∏–≥—Ä–æ–∫–∞
function handlePlayerTurn(clickedCellIndex) {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª–µ—Ç–∫–∏ –∏ –∞–∫—Ç–∏–≤–Ω–∞ –ª–∏ –∏–≥—Ä–∞
    if (gameBoard[clickedCellIndex] !== '' || !gameActive) {
        return;
    }
    // –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —Å–∏–º–≤–æ–ª–∞ —Ç–µ–∫—É—â–µ–≥–æ –∏–≥—Ä–æ–∫–∞ –∏ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ö–æ–¥–∞
    gameBoard[clickedCellIndex] = currentPlayer;
    checkForWinOrDraw();
    currentPlayer = currentPlayer === 'X' ? 'O' : 'X';
}

// –í—ã–±–æ—Ä –≤—Å–µ—Ö —è—á–µ–µ–∫ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–ª—É—à–∞—Ç–µ–ª—è —Å–æ–±—ã—Ç–∏–π
const cells = document.querySelectorAll('.gameboard__cell');
cells.forEach(cell => {
    cell.addEventListener('click', cellClicked, false);
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–æ–≤ –ø–æ —è—á–µ–π–∫–∞–º
function cellClicked(clickedCellEvent) {
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–∞ —è—á–µ–π–∫–∏
    const clickedCell = clickedCellEvent.target;
    const clickedCellIndex = parseInt(clickedCell.id.replace('cell-', '')) - 1;
    if (gameBoard[clickedCellIndex] !== '' || !gameActive) {
        return;
    }
    // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ö–æ–¥–∞ –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
    handlePlayerTurn(clickedCellIndex);
    updateUI();
    clickedCell.style.backgroundColor = '#fae798';
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞
function updateUI() {
    for (let i = 0; i < cells.length; i++) {
        cells[i].innerText = gameBoard[i];
    }
}

// –í–æ–∑–º–æ–∂–Ω—ã–µ –≤—ã–∏–≥—Ä—ã—à–Ω—ã–µ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏
const winConditions = [
    [0, 1, 2], // –í–µ—Ä—Ö–Ω–∏–π —Ä—è–¥
    [3, 4, 5], // –°—Ä–µ–¥–Ω–∏–π —Ä—è–¥
    [6, 7, 8], // –ù–∏–∂–Ω–∏–π —Ä—è–¥
    [0, 3, 6], // –õ–µ–≤—ã–π —Å—Ç–æ–ª–±–∏–∫
    [1, 4, 7], // –°—Ä–µ–¥–Ω–∏–π —Å—Ç–æ–ª–±–∏–∫
    [2, 5, 8], // –ü—Ä–∞–≤—ã–π —Å—Ç–æ–ª–±–∏–∫
    [0, 4, 8], // –î–∏–∞–≥–æ–Ω–∞–ª—å —Å–ª–µ–≤–∞ –Ω–∞–ø—Ä–∞–≤–æ
    [2, 4, 6]  // –î–∏–∞–≥–æ–Ω–∞–ª—å —Å–ø—Ä–∞–≤–∞ –Ω–∞–ª–µ–≤–æ
];

// –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ –∏–≥—Ä—ã
function checkForWinOrDraw() {
    let roundWon = false;
    // –ü–µ—Ä–µ–±–æ—Ä –≤—ã–∏–≥—Ä—ã—à–Ω—ã—Ö –∫–æ–º–±–∏–Ω–∞—Ü–∏–π
    for (let i = 0; i < winConditions.length; i++) {
        const [a, b, c] = winConditions[i];
        if (gameBoard[a] && gameBoard[a] === gameBoard[b] && gameBoard[a] === gameBoard[c]) {
            roundWon = true;
            break;
        }
    }
    // –ò–≥—Ä–æ–∫ –≤—ã–∏–≥—Ä–∞–ª
    if (roundWon) {
        announceWinner(currentPlayer);
        gameActive = false;
        return;
    }
    // –ù–∏—á—å—è
    let roundDraw = !gameBoard.includes('');
    if (roundDraw) {
        announceDraw();
        gameActive = false;
        return;
    }
}

// –û–±—ä—è–≤–ª–µ–Ω–∏–µ –ø–æ–±–µ–¥–∏—Ç–µ–ª—è
function announceWinner(player) {
    message.innerText = `üéâ Player ${player} Wins!`;
    message.classList.add('message-appear');
}

// –û–±—ä—è–≤–ª–µ–Ω–∏–µ –Ω–∏—á—å–µ–π
function announceDraw() {
    message.innerText = 'üëç Game Draw!';
    message.classList.add('message-appear');
}

// –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ —Å–±—Ä–æ—Å–∞
const resetButton = document.getElementById('resetButton');
resetButton.addEventListener('click', resetGame, false);

// –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∏–≥—Ä—ã
function resetGame() {
    gameBoard = ['', '', '', '', '', '', '', '', ''];
    gameActive = true;
    currentPlayer = 'X';
    cells.forEach(cell => {
        cell.innerText = '';
        cell.style.backgroundColor = '#fff';
    });
    message.innerText = '';
    message.classList.remove('message-appear');

}
